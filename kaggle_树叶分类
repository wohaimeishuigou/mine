{
  "nbformat": 4,
  "nbformat_minor": 5,
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.8"
    },
    "colab": {
      "name": "kaggle-树叶分类-resnest.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "machine_shape": "hm",
      "include_colab_link": true
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "17f1ee229b234ce4bd70e626ddf6a6cd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_359abdcc446b4e97bd0109182ffb8171",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_185dc21aa7714548918a25ddf128d23f",
              "IPY_MODEL_e8f370fa716040cfa0ad5e36556962be",
              "IPY_MODEL_7b5091c3637b41b58a464a2fbc89fa06"
            ]
          }
        },
        "359abdcc446b4e97bd0109182ffb8171": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "185dc21aa7714548918a25ddf128d23f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_2fa3146674304b2694c5e23e76d92126",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": "100%",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8c7951da25de47c892be3d426fb872a4"
          }
        },
        "e8f370fa716040cfa0ad5e36556962be": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a7410267467a484f9679523917070a7a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 110273258,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 110273258,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_41548ce4159047f6b004c19dee91d529"
          }
        },
        "7b5091c3637b41b58a464a2fbc89fa06": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_23dd94ba022a442ba6ee986bbf8e87bd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 105M/105M [00:09&lt;00:00, 9.78MB/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8e5e277b821e4fdf89c77987da5e8fbd"
          }
        },
        "2fa3146674304b2694c5e23e76d92126": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8c7951da25de47c892be3d426fb872a4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a7410267467a484f9679523917070a7a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "41548ce4159047f6b004c19dee91d529": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "23dd94ba022a442ba6ee986bbf8e87bd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8e5e277b821e4fdf89c77987da5e8fbd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/wohaimeishuigou/leetcode/blob/master/kaggle_%E6%A0%91%E5%8F%B6%E5%88%86%E7%B1%BB_resnest.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aL6I_9KyYemv"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ],
      "id": "aL6I_9KyYemv",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "  print('Not connected to a GPU')\n",
        "else:\n",
        "  print(gpu_info)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w1kq1Q1wmNGQ",
        "outputId": "2ab46bfd-d181-4dd7-8a89-e082354b8eb1"
      },
      "id": "w1kq1Q1wmNGQ",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sat Dec 25 12:49:29 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 495.44       Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   43C    P0    35W / 250W |   6375MiB / 16280MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZdOEUgQhZBPe",
        "outputId": "8c18a13b-c7a1-4be4-dbde-42a7c2775e8c"
      },
      "source": [
        "!pip install git+https://github.com/ildoonet/cutmix "
      ],
      "id": "ZdOEUgQhZBPe",
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting git+https://github.com/ildoonet/cutmix\n",
            "  Cloning https://github.com/ildoonet/cutmix to /tmp/pip-req-build-fq0lllpq\n",
            "  Running command git clone -q https://github.com/ildoonet/cutmix /tmp/pip-req-build-fq0lllpq\n",
            "Building wheels for collected packages: cutmix\n",
            "  Building wheel for cutmix (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for cutmix: filename=cutmix-0.1-py3-none-any.whl size=3597 sha256=73ab9162c9bae8b5b4495e996d66ac15812c1489396cf583d4d2680fb30ed292\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-dkhn6pyc/wheels/a9/81/a7/d3822499b14d97b1e2ef7e7538b70f15355607cfc7526f7cd5\n",
            "Successfully built cutmix\n",
            "Installing collected packages: cutmix\n",
            "Successfully installed cutmix-0.1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mkKjlxzWZJBS",
        "outputId": "6a240089-f3b5-431d-9d93-de951835430a"
      },
      "source": [
        "!pip install resnest --pre"
      ],
      "id": "mkKjlxzWZJBS",
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting resnest\n",
            "  Downloading resnest-0.0.6b20211227-py3-none-any.whl (49 kB)\n",
            "\u001b[?25l\r\u001b[K     |██████▊                         | 10 kB 32.1 MB/s eta 0:00:01\r\u001b[K     |█████████████▍                  | 20 kB 8.3 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 30 kB 7.5 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▊     | 40 kB 7.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 49 kB 2.4 MB/s \n",
            "\u001b[?25hRequirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from resnest) (1.4.1)\n",
            "Collecting fvcore\n",
            "  Downloading fvcore-0.1.5.post20211023.tar.gz (49 kB)\n",
            "\u001b[K     |████████████████████████████████| 49 kB 6.8 MB/s \n",
            "\u001b[?25hRequirement already satisfied: Pillow in /usr/local/lib/python3.7/dist-packages (from resnest) (7.1.2)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from resnest) (4.62.3)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from resnest) (2.23.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from resnest) (1.19.5)\n",
            "Requirement already satisfied: torch>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from resnest) (1.10.0+cu111)\n",
            "Collecting iopath\n",
            "  Downloading iopath-0.1.9-py3-none-any.whl (27 kB)\n",
            "Collecting nose\n",
            "  Downloading nose-1.3.7-py3-none-any.whl (154 kB)\n",
            "\u001b[K     |████████████████████████████████| 154 kB 8.7 MB/s \n",
            "\u001b[?25hRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.0.0->resnest) (3.10.0.2)\n",
            "Collecting yacs>=0.1.6\n",
            "  Downloading yacs-0.1.8-py3-none-any.whl (14 kB)\n",
            "Collecting pyyaml>=5.1\n",
            "  Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n",
            "\u001b[K     |████████████████████████████████| 596 kB 62.4 MB/s \n",
            "\u001b[?25hRequirement already satisfied: termcolor>=1.1 in /usr/local/lib/python3.7/dist-packages (from fvcore->resnest) (1.1.0)\n",
            "Requirement already satisfied: tabulate in /usr/local/lib/python3.7/dist-packages (from fvcore->resnest) (0.8.9)\n",
            "Collecting portalocker\n",
            "  Downloading portalocker-2.3.2-py2.py3-none-any.whl (15 kB)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->resnest) (2021.10.8)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->resnest) (3.0.4)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->resnest) (2.10)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->resnest) (1.24.3)\n",
            "Building wheels for collected packages: fvcore\n",
            "  Building wheel for fvcore (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for fvcore: filename=fvcore-0.1.5.post20211023-py3-none-any.whl size=60947 sha256=820ca4be0f4be4f3ef7b436ff4c29f7479a147707cb8e05a920077a596dd2aee\n",
            "  Stored in directory: /root/.cache/pip/wheels/16/98/fc/252d62cab6263c719120e06b28f3378af59b52ce7a20e81852\n",
            "Successfully built fvcore\n",
            "Installing collected packages: pyyaml, portalocker, yacs, iopath, nose, fvcore, resnest\n",
            "  Attempting uninstall: pyyaml\n",
            "    Found existing installation: PyYAML 3.13\n",
            "    Uninstalling PyYAML-3.13:\n",
            "      Successfully uninstalled PyYAML-3.13\n",
            "Successfully installed fvcore-0.1.5.post20211023 iopath-0.1.9 nose-1.3.7 portalocker-2.3.2 pyyaml-6.0 resnest-0.0.6b20211227 yacs-0.1.8\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FufzJ1-YZScq",
        "outputId": "75c19206-d630-4a4d-afa8-fccf038844d7"
      },
      "source": [
        "!pip install tqdm"
      ],
      "id": "FufzJ1-YZScq",
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (4.62.3)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KP_QQAcB7lwB",
        "outputId": "ce8dc480-ba4b-42d7-a198-a0605ab9639b"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ],
      "id": "KP_QQAcB7lwB",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FE7tKwQU8DBI"
      },
      "source": [
        "# 新段落"
      ],
      "id": "FE7tKwQU8DBI"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "50c41ea2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "020861f6-4c1b-49d5-9352-f0253af8cd80"
      },
      "source": [
        "import torch\n",
        "import torch.nn as nn\n",
        "from torch.nn import functional as F\n",
        "from resnest.torch import resnest50\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from PIL import Image\n",
        "\n",
        "from cutmix.cutmix import CutMix\n",
        "from cutmix.utils import CutMixCrossEntropyLoss\n",
        "\n",
        "from torch.utils.data import Dataset,DataLoader,TensorDataset\n",
        "from torchvision import transforms\n",
        "from torch.optim.lr_scheduler import CosineAnnealingLR\n",
        "from sklearn.model_selection import KFold\n",
        "from tqdm import tqdm\n",
        "\n",
        "labels_dataframe=pd.read_csv('/content/gdrive/MyDrive/classify-leaves/train.csv')\n",
        "labels_dataframe.head(5)"
      ],
      "id": "50c41ea2",
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-4a5b71bb-90ba-4394-b940-cba7332225e3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>image</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>images/0.jpg</td>\n",
              "      <td>maclura_pomifera</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>images/1.jpg</td>\n",
              "      <td>maclura_pomifera</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>images/2.jpg</td>\n",
              "      <td>maclura_pomifera</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>images/3.jpg</td>\n",
              "      <td>maclura_pomifera</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>images/4.jpg</td>\n",
              "      <td>maclura_pomifera</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a5b71bb-90ba-4394-b940-cba7332225e3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4a5b71bb-90ba-4394-b940-cba7332225e3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4a5b71bb-90ba-4394-b940-cba7332225e3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "          image             label\n",
              "0  images/0.jpg  maclura_pomifera\n",
              "1  images/1.jpg  maclura_pomifera\n",
              "2  images/2.jpg  maclura_pomifera\n",
              "3  images/3.jpg  maclura_pomifera\n",
              "4  images/4.jpg  maclura_pomifera"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yU8QZDlrYD0u",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2e209fae-32f8-468d-91d2-ad0e16a65546"
      },
      "source": [
        "!pip install ttach"
      ],
      "id": "yU8QZDlrYD0u",
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting ttach\n",
            "  Downloading ttach-0.0.3-py3-none-any.whl (9.8 kB)\n",
            "Installing collected packages: ttach\n",
            "Successfully installed ttach-0.0.3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4af1e69a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4f3f5fb2-f3cf-46d0-eb57-6bcae8d12a89"
      },
      "source": [
        "#把label文件排个序\n",
        "leaves_labels=sorted(list(set(labels_dataframe['label'])))\n",
        "#set() 函数创建一个无序不重复元素集\n",
        "n_classes=len(leaves_labels)\n",
        "print(n_classes)\n",
        "leaves_labels[:10]"
      ],
      "id": "4af1e69a",
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "176\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['abies_concolor',\n",
              " 'abies_nordmanniana',\n",
              " 'acer_campestre',\n",
              " 'acer_ginnala',\n",
              " 'acer_griseum',\n",
              " 'acer_negundo',\n",
              " 'acer_palmatum',\n",
              " 'acer_pensylvanicum',\n",
              " 'acer_platanoides',\n",
              " 'acer_pseudoplatanus']"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "51a7ef2e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0afc53a9-c3a8-4de5-e8b6-12771292b934"
      },
      "source": [
        "#把label转成对应的数字\n",
        "class_to_num=dict(zip(leaves_labels,range(n_classes)))\n",
        "#zip()函数用于将可迭代的对象作为参数,\n",
        "#将对象中对应的元素从前到后一一对应打包成一个个元组,然后返回由这些元组组成的列表\n",
        "class_to_num"
      ],
      "id": "51a7ef2e",
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'abies_concolor': 0,\n",
              " 'abies_nordmanniana': 1,\n",
              " 'acer_campestre': 2,\n",
              " 'acer_ginnala': 3,\n",
              " 'acer_griseum': 4,\n",
              " 'acer_negundo': 5,\n",
              " 'acer_palmatum': 6,\n",
              " 'acer_pensylvanicum': 7,\n",
              " 'acer_platanoides': 8,\n",
              " 'acer_pseudoplatanus': 9,\n",
              " 'acer_rubrum': 10,\n",
              " 'acer_saccharinum': 11,\n",
              " 'acer_saccharum': 12,\n",
              " 'aesculus_flava': 13,\n",
              " 'aesculus_glabra': 14,\n",
              " 'aesculus_hippocastamon': 15,\n",
              " 'aesculus_pavi': 16,\n",
              " 'ailanthus_altissima': 17,\n",
              " 'albizia_julibrissin': 18,\n",
              " 'amelanchier_arborea': 19,\n",
              " 'amelanchier_canadensis': 20,\n",
              " 'amelanchier_laevis': 21,\n",
              " 'asimina_triloba': 22,\n",
              " 'betula_alleghaniensis': 23,\n",
              " 'betula_jacqemontii': 24,\n",
              " 'betula_lenta': 25,\n",
              " 'betula_nigra': 26,\n",
              " 'betula_populifolia': 27,\n",
              " 'broussonettia_papyrifera': 28,\n",
              " 'carpinus_betulus': 29,\n",
              " 'carpinus_caroliniana': 30,\n",
              " 'carya_cordiformis': 31,\n",
              " 'carya_glabra': 32,\n",
              " 'carya_ovata': 33,\n",
              " 'carya_tomentosa': 34,\n",
              " 'castanea_dentata': 35,\n",
              " 'catalpa_bignonioides': 36,\n",
              " 'catalpa_speciosa': 37,\n",
              " 'cedrus_atlantica': 38,\n",
              " 'cedrus_deodara': 39,\n",
              " 'cedrus_libani': 40,\n",
              " 'celtis_occidentalis': 41,\n",
              " 'celtis_tenuifolia': 42,\n",
              " 'cercidiphyllum_japonicum': 43,\n",
              " 'cercis_canadensis': 44,\n",
              " 'chamaecyparis_pisifera': 45,\n",
              " 'chamaecyparis_thyoides': 46,\n",
              " 'chionanthus_retusus': 47,\n",
              " 'chionanthus_virginicus': 48,\n",
              " 'cladrastis_lutea': 49,\n",
              " 'cornus_florida': 50,\n",
              " 'cornus_kousa': 51,\n",
              " 'cornus_mas': 52,\n",
              " 'crataegus_crus-galli': 53,\n",
              " 'crataegus_laevigata': 54,\n",
              " 'crataegus_phaenopyrum': 55,\n",
              " 'crataegus_pruinosa': 56,\n",
              " 'crataegus_viridis': 57,\n",
              " 'cryptomeria_japonica': 58,\n",
              " 'diospyros_virginiana': 59,\n",
              " 'eucommia_ulmoides': 60,\n",
              " 'evodia_daniellii': 61,\n",
              " 'fagus_grandifolia': 62,\n",
              " 'ficus_carica': 63,\n",
              " 'fraxinus_nigra': 64,\n",
              " 'fraxinus_pennsylvanica': 65,\n",
              " 'ginkgo_biloba': 66,\n",
              " 'gleditsia_triacanthos': 67,\n",
              " 'gymnocladus_dioicus': 68,\n",
              " 'halesia_tetraptera': 69,\n",
              " 'ilex_opaca': 70,\n",
              " 'juglans_cinerea': 71,\n",
              " 'juglans_nigra': 72,\n",
              " 'juniperus_virginiana': 73,\n",
              " 'koelreuteria_paniculata': 74,\n",
              " 'larix_decidua': 75,\n",
              " 'liquidambar_styraciflua': 76,\n",
              " 'liriodendron_tulipifera': 77,\n",
              " 'maclura_pomifera': 78,\n",
              " 'magnolia_acuminata': 79,\n",
              " 'magnolia_denudata': 80,\n",
              " 'magnolia_grandiflora': 81,\n",
              " 'magnolia_macrophylla': 82,\n",
              " 'magnolia_stellata': 83,\n",
              " 'magnolia_tripetala': 84,\n",
              " 'magnolia_virginiana': 85,\n",
              " 'malus_baccata': 86,\n",
              " 'malus_coronaria': 87,\n",
              " 'malus_floribunda': 88,\n",
              " 'malus_hupehensis': 89,\n",
              " 'malus_pumila': 90,\n",
              " 'metasequoia_glyptostroboides': 91,\n",
              " 'morus_alba': 92,\n",
              " 'morus_rubra': 93,\n",
              " 'nyssa_sylvatica': 94,\n",
              " 'ostrya_virginiana': 95,\n",
              " 'oxydendrum_arboreum': 96,\n",
              " 'paulownia_tomentosa': 97,\n",
              " 'phellodendron_amurense': 98,\n",
              " 'picea_abies': 99,\n",
              " 'picea_orientalis': 100,\n",
              " 'picea_pungens': 101,\n",
              " 'pinus_bungeana': 102,\n",
              " 'pinus_cembra': 103,\n",
              " 'pinus_densiflora': 104,\n",
              " 'pinus_echinata': 105,\n",
              " 'pinus_flexilis': 106,\n",
              " 'pinus_koraiensis': 107,\n",
              " 'pinus_nigra': 108,\n",
              " 'pinus_parviflora': 109,\n",
              " 'pinus_peucea': 110,\n",
              " 'pinus_pungens': 111,\n",
              " 'pinus_resinosa': 112,\n",
              " 'pinus_rigida': 113,\n",
              " 'pinus_strobus': 114,\n",
              " 'pinus_sylvestris': 115,\n",
              " 'pinus_taeda': 116,\n",
              " 'pinus_thunbergii': 117,\n",
              " 'pinus_virginiana': 118,\n",
              " 'pinus_wallichiana': 119,\n",
              " 'platanus_acerifolia': 120,\n",
              " 'platanus_occidentalis': 121,\n",
              " 'populus_deltoides': 122,\n",
              " 'populus_grandidentata': 123,\n",
              " 'populus_tremuloides': 124,\n",
              " 'prunus_pensylvanica': 125,\n",
              " 'prunus_sargentii': 126,\n",
              " 'prunus_serotina': 127,\n",
              " 'prunus_serrulata': 128,\n",
              " 'prunus_subhirtella': 129,\n",
              " 'prunus_virginiana': 130,\n",
              " 'prunus_yedoensis': 131,\n",
              " 'pseudolarix_amabilis': 132,\n",
              " 'ptelea_trifoliata': 133,\n",
              " 'pyrus_calleryana': 134,\n",
              " 'quercus_acutissima': 135,\n",
              " 'quercus_alba': 136,\n",
              " 'quercus_bicolor': 137,\n",
              " 'quercus_cerris': 138,\n",
              " 'quercus_coccinea': 139,\n",
              " 'quercus_imbricaria': 140,\n",
              " 'quercus_macrocarpa': 141,\n",
              " 'quercus_marilandica': 142,\n",
              " 'quercus_michauxii': 143,\n",
              " 'quercus_montana': 144,\n",
              " 'quercus_muehlenbergii': 145,\n",
              " 'quercus_nigra': 146,\n",
              " 'quercus_palustris': 147,\n",
              " 'quercus_phellos': 148,\n",
              " 'quercus_robur': 149,\n",
              " 'quercus_shumardii': 150,\n",
              " 'quercus_stellata': 151,\n",
              " 'quercus_velutina': 152,\n",
              " 'quercus_virginiana': 153,\n",
              " 'robinia_pseudo-acacia': 154,\n",
              " 'salix_babylonica': 155,\n",
              " 'salix_caroliniana': 156,\n",
              " 'salix_matsudana': 157,\n",
              " 'salix_nigra': 158,\n",
              " 'sassafras_albidum': 159,\n",
              " 'staphylea_trifolia': 160,\n",
              " 'stewartia_pseudocamellia': 161,\n",
              " 'styrax_japonica': 162,\n",
              " 'taxodium_distichum': 163,\n",
              " 'tilia_americana': 164,\n",
              " 'tilia_cordata': 165,\n",
              " 'tilia_europaea': 166,\n",
              " 'tilia_tomentosa': 167,\n",
              " 'tsuga_canadensis': 168,\n",
              " 'ulmus_americana': 169,\n",
              " 'ulmus_glabra': 170,\n",
              " 'ulmus_parvifolia': 171,\n",
              " 'ulmus_procera': 172,\n",
              " 'ulmus_pumila': 173,\n",
              " 'ulmus_rubra': 174,\n",
              " 'zelkova_serrata': 175}"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "36dd6870",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2e1fae2c-a402-4fe8-de08-158aacb9a340"
      },
      "source": [
        "#再转回来，方便最后预测的时候备用\n",
        "num_to_class={v:k for k ,v in class_to_num.items()}\n",
        "#字典(Dictionary),items() 函数以列表返回可遍历的(键, 值) 元组数组\n",
        "num_to_class"
      ],
      "id": "36dd6870",
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{0: 'abies_concolor',\n",
              " 1: 'abies_nordmanniana',\n",
              " 2: 'acer_campestre',\n",
              " 3: 'acer_ginnala',\n",
              " 4: 'acer_griseum',\n",
              " 5: 'acer_negundo',\n",
              " 6: 'acer_palmatum',\n",
              " 7: 'acer_pensylvanicum',\n",
              " 8: 'acer_platanoides',\n",
              " 9: 'acer_pseudoplatanus',\n",
              " 10: 'acer_rubrum',\n",
              " 11: 'acer_saccharinum',\n",
              " 12: 'acer_saccharum',\n",
              " 13: 'aesculus_flava',\n",
              " 14: 'aesculus_glabra',\n",
              " 15: 'aesculus_hippocastamon',\n",
              " 16: 'aesculus_pavi',\n",
              " 17: 'ailanthus_altissima',\n",
              " 18: 'albizia_julibrissin',\n",
              " 19: 'amelanchier_arborea',\n",
              " 20: 'amelanchier_canadensis',\n",
              " 21: 'amelanchier_laevis',\n",
              " 22: 'asimina_triloba',\n",
              " 23: 'betula_alleghaniensis',\n",
              " 24: 'betula_jacqemontii',\n",
              " 25: 'betula_lenta',\n",
              " 26: 'betula_nigra',\n",
              " 27: 'betula_populifolia',\n",
              " 28: 'broussonettia_papyrifera',\n",
              " 29: 'carpinus_betulus',\n",
              " 30: 'carpinus_caroliniana',\n",
              " 31: 'carya_cordiformis',\n",
              " 32: 'carya_glabra',\n",
              " 33: 'carya_ovata',\n",
              " 34: 'carya_tomentosa',\n",
              " 35: 'castanea_dentata',\n",
              " 36: 'catalpa_bignonioides',\n",
              " 37: 'catalpa_speciosa',\n",
              " 38: 'cedrus_atlantica',\n",
              " 39: 'cedrus_deodara',\n",
              " 40: 'cedrus_libani',\n",
              " 41: 'celtis_occidentalis',\n",
              " 42: 'celtis_tenuifolia',\n",
              " 43: 'cercidiphyllum_japonicum',\n",
              " 44: 'cercis_canadensis',\n",
              " 45: 'chamaecyparis_pisifera',\n",
              " 46: 'chamaecyparis_thyoides',\n",
              " 47: 'chionanthus_retusus',\n",
              " 48: 'chionanthus_virginicus',\n",
              " 49: 'cladrastis_lutea',\n",
              " 50: 'cornus_florida',\n",
              " 51: 'cornus_kousa',\n",
              " 52: 'cornus_mas',\n",
              " 53: 'crataegus_crus-galli',\n",
              " 54: 'crataegus_laevigata',\n",
              " 55: 'crataegus_phaenopyrum',\n",
              " 56: 'crataegus_pruinosa',\n",
              " 57: 'crataegus_viridis',\n",
              " 58: 'cryptomeria_japonica',\n",
              " 59: 'diospyros_virginiana',\n",
              " 60: 'eucommia_ulmoides',\n",
              " 61: 'evodia_daniellii',\n",
              " 62: 'fagus_grandifolia',\n",
              " 63: 'ficus_carica',\n",
              " 64: 'fraxinus_nigra',\n",
              " 65: 'fraxinus_pennsylvanica',\n",
              " 66: 'ginkgo_biloba',\n",
              " 67: 'gleditsia_triacanthos',\n",
              " 68: 'gymnocladus_dioicus',\n",
              " 69: 'halesia_tetraptera',\n",
              " 70: 'ilex_opaca',\n",
              " 71: 'juglans_cinerea',\n",
              " 72: 'juglans_nigra',\n",
              " 73: 'juniperus_virginiana',\n",
              " 74: 'koelreuteria_paniculata',\n",
              " 75: 'larix_decidua',\n",
              " 76: 'liquidambar_styraciflua',\n",
              " 77: 'liriodendron_tulipifera',\n",
              " 78: 'maclura_pomifera',\n",
              " 79: 'magnolia_acuminata',\n",
              " 80: 'magnolia_denudata',\n",
              " 81: 'magnolia_grandiflora',\n",
              " 82: 'magnolia_macrophylla',\n",
              " 83: 'magnolia_stellata',\n",
              " 84: 'magnolia_tripetala',\n",
              " 85: 'magnolia_virginiana',\n",
              " 86: 'malus_baccata',\n",
              " 87: 'malus_coronaria',\n",
              " 88: 'malus_floribunda',\n",
              " 89: 'malus_hupehensis',\n",
              " 90: 'malus_pumila',\n",
              " 91: 'metasequoia_glyptostroboides',\n",
              " 92: 'morus_alba',\n",
              " 93: 'morus_rubra',\n",
              " 94: 'nyssa_sylvatica',\n",
              " 95: 'ostrya_virginiana',\n",
              " 96: 'oxydendrum_arboreum',\n",
              " 97: 'paulownia_tomentosa',\n",
              " 98: 'phellodendron_amurense',\n",
              " 99: 'picea_abies',\n",
              " 100: 'picea_orientalis',\n",
              " 101: 'picea_pungens',\n",
              " 102: 'pinus_bungeana',\n",
              " 103: 'pinus_cembra',\n",
              " 104: 'pinus_densiflora',\n",
              " 105: 'pinus_echinata',\n",
              " 106: 'pinus_flexilis',\n",
              " 107: 'pinus_koraiensis',\n",
              " 108: 'pinus_nigra',\n",
              " 109: 'pinus_parviflora',\n",
              " 110: 'pinus_peucea',\n",
              " 111: 'pinus_pungens',\n",
              " 112: 'pinus_resinosa',\n",
              " 113: 'pinus_rigida',\n",
              " 114: 'pinus_strobus',\n",
              " 115: 'pinus_sylvestris',\n",
              " 116: 'pinus_taeda',\n",
              " 117: 'pinus_thunbergii',\n",
              " 118: 'pinus_virginiana',\n",
              " 119: 'pinus_wallichiana',\n",
              " 120: 'platanus_acerifolia',\n",
              " 121: 'platanus_occidentalis',\n",
              " 122: 'populus_deltoides',\n",
              " 123: 'populus_grandidentata',\n",
              " 124: 'populus_tremuloides',\n",
              " 125: 'prunus_pensylvanica',\n",
              " 126: 'prunus_sargentii',\n",
              " 127: 'prunus_serotina',\n",
              " 128: 'prunus_serrulata',\n",
              " 129: 'prunus_subhirtella',\n",
              " 130: 'prunus_virginiana',\n",
              " 131: 'prunus_yedoensis',\n",
              " 132: 'pseudolarix_amabilis',\n",
              " 133: 'ptelea_trifoliata',\n",
              " 134: 'pyrus_calleryana',\n",
              " 135: 'quercus_acutissima',\n",
              " 136: 'quercus_alba',\n",
              " 137: 'quercus_bicolor',\n",
              " 138: 'quercus_cerris',\n",
              " 139: 'quercus_coccinea',\n",
              " 140: 'quercus_imbricaria',\n",
              " 141: 'quercus_macrocarpa',\n",
              " 142: 'quercus_marilandica',\n",
              " 143: 'quercus_michauxii',\n",
              " 144: 'quercus_montana',\n",
              " 145: 'quercus_muehlenbergii',\n",
              " 146: 'quercus_nigra',\n",
              " 147: 'quercus_palustris',\n",
              " 148: 'quercus_phellos',\n",
              " 149: 'quercus_robur',\n",
              " 150: 'quercus_shumardii',\n",
              " 151: 'quercus_stellata',\n",
              " 152: 'quercus_velutina',\n",
              " 153: 'quercus_virginiana',\n",
              " 154: 'robinia_pseudo-acacia',\n",
              " 155: 'salix_babylonica',\n",
              " 156: 'salix_caroliniana',\n",
              " 157: 'salix_matsudana',\n",
              " 158: 'salix_nigra',\n",
              " 159: 'sassafras_albidum',\n",
              " 160: 'staphylea_trifolia',\n",
              " 161: 'stewartia_pseudocamellia',\n",
              " 162: 'styrax_japonica',\n",
              " 163: 'taxodium_distichum',\n",
              " 164: 'tilia_americana',\n",
              " 165: 'tilia_cordata',\n",
              " 166: 'tilia_europaea',\n",
              " 167: 'tilia_tomentosa',\n",
              " 168: 'tsuga_canadensis',\n",
              " 169: 'ulmus_americana',\n",
              " 170: 'ulmus_glabra',\n",
              " 171: 'ulmus_parvifolia',\n",
              " 172: 'ulmus_procera',\n",
              " 173: 'ulmus_pumila',\n",
              " 174: 'ulmus_rubra',\n",
              " 175: 'zelkova_serrata'}"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ff84f9d4"
      },
      "source": [
        "\n",
        "#继承pytorch的dataset，创建自己的\n",
        "class TrainValidData(Dataset):\n",
        "    def __init__(self,csv_path,file_path,resize_height=224,resize_width=224,transform=None):\n",
        "        \"\"\"\n",
        "        Args:\n",
        "            csv_path (string): csv 文件路径\n",
        "            img_path (string): 图像文件所在路径\n",
        "\n",
        "        \"\"\"\n",
        "        #需要调整后的照片尺寸\n",
        "        self.resize_height=resize_height\n",
        "        self.resize_width=resize_width\n",
        "        \n",
        "        self.file_path=file_path\n",
        "        self.to_tensor=transforms.ToTensor()#将数据转换成tensor格式\n",
        "        self.transform=transform\n",
        "        \n",
        "        #读取csv文件\n",
        "        #利用pandas读取csv文件\n",
        "        self.data_info=pd.read_csv(csv_path,header=None)\n",
        "        #header=None是去掉表头部分\n",
        "        \n",
        "        #文件第一列包含图像文件名称\n",
        "        self.image_arr=np.asarray(self.data_info.iloc[1:,0])\n",
        "        #self.data_info.iloc[1:,0]表示读取第一列，读取第二行到最后一行\n",
        "        \n",
        "        #第二列是图像的label\n",
        "        self.label_arr=np.asarray(self.data_info.iloc[1:,1])\n",
        "        \n",
        "        #计算length\n",
        "        self.data_len=len(self.data_info.index)-1#这 why -1？\n",
        "        \n",
        "    def __getitem__(self,index):\n",
        "        #从image_arr中得到索引对应的文件名\n",
        "        single_image_name=self.image_arr[index]\n",
        "        \n",
        "        #读取图像文件\n",
        "        img_as_img=Image.open(self.file_path+single_image_name)\n",
        "        \n",
        "        #如果需要将RGB三通道的图片转换成灰度图片可参考下面两行\n",
        "        # if img_as_img.mode != 'L':\n",
        "        #     img_as_img = img_as_img.convert('L')\n",
        "        \n",
        "       \n",
        "        #设置好需要转换的变量，还可以包括一系列的nomarlize等操作\n",
        "        transform=transforms.Compose([transforms.Resize((224,224)),transforms.ToTensor()])\n",
        "        img_as_img=transform(img_as_img)\n",
        "        \n",
        "        #得到图像的label\n",
        "        label=self.label_arr[index]\n",
        "        number_label=class_to_num[label]\n",
        "        \n",
        "        return(img_as_img,number_label)#返回每一个index对应的图片数据和对应的label\n",
        "    def __len__(self):\n",
        "        return self.data_len\n",
        "\n",
        "        "
      ],
      "id": "ff84f9d4",
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f21ac321"
      },
      "source": [
        "#继承pytorch的dataset，创建自己的\n",
        "class TestData(Dataset):\n",
        "    def __init__(self,csv_path,file_path,resize_height=224,resize_width=224,transform=None):\n",
        "        \"\"\"\n",
        "        Args:\n",
        "            csv_path (string): csv 文件路径\n",
        "            img_path (string): 图像文件所在路径\n",
        "\n",
        "        \"\"\"\n",
        "        self.resize_height=resize_height\n",
        "        self.resize_width=resize_width\n",
        "        \n",
        "        self.file_path=file_path\n",
        "        self.transform=transform\n",
        "        self.to_tensor=transforms.ToTensor()\n",
        "        \n",
        "        self.data_info=pd.read_csv(csv_path,header=None)\n",
        "        self.image_arr=np.asarray(self.data_info.iloc[1:,0])\n",
        "        \n",
        "        self.data_len=len(self.data_info.index)-1\n",
        "    def __getitem__(self,index):\n",
        "        single_image_name=self.image_arr[index]\n",
        "        \n",
        "        img_as_img=Image.open(self.file_path+single_image_name)\n",
        "        #如果需要将RGB三通道的图片转换成灰度图片可参考下面两行\n",
        "        if img_as_img.mode != 'L':\n",
        "             img_as_img = img_as_img.convert('L')\n",
        "        \n",
        "        \n",
        "        #设置好需要转换的变量，还可以包括一系列的nomarlize等等操作\n",
        "        transform=transforms.Compose([transforms.Resize((224,224)).\n",
        "                                      transforms.ToTensor()])\n",
        "        img_as_img=transform(img_as_img)\n",
        "        \n",
        "        return img_as_img\n",
        "    def __len__(self):\n",
        "        return self.data_len\n",
        "        "
      ],
      "id": "f21ac321",
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2f9bef43"
      },
      "source": [
        "train_transform=transforms.Compose([\n",
        "    #随机裁剪图像，所得图像为原始面积的0.08到1之间，高宽比在3/4和4/3之间\n",
        "    #然后，缩放图像以创建224x224的新图像\n",
        "    transforms.RandomResizedCrop(224,scale=(0.08,1.0),ratio=(3.0/4.0,4.0/3.0)),\n",
        "    transforms.RandomHorizontalFlip(),\n",
        "    #随机更改亮度，对比度和饱和度\n",
        "    transforms.ColorJitter(brightness=0.4,contrast=0.4,saturation=0.4),\n",
        "    #添加随机噪声\n",
        "    transforms.ToTensor(),\n",
        "    #标准化图像的每个通道\n",
        "    transforms.Normalize([0.485,0.456,0.406],[0.229,0.224,0.225])\n",
        "])\n",
        "val_test_transform=transforms.Compose([\n",
        "    transforms.Resize(256),\n",
        "    #从图像中心裁切224x224大小的图片\n",
        "    transforms.CenterCrop(224),\n",
        "    transforms.ToTensor(),\n",
        "    transforms.Normalize([0.485,0.4556,0.406],[0.229,0.224,0.225])\n",
        "])"
      ],
      "id": "2f9bef43",
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ed43f174",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "79453562-6fa6-4ea4-9102-0c2827a33574"
      },
      "source": [
        "train_val_path='/content/gdrive/MyDrive/classify-leaves/train.csv'\n",
        "test_path='/content/gdrive/MyDrive/classify-leaves/test.csv'\n",
        "#csv中已经有images的路径了，因此这里只到上一级目录\n",
        "img_path='/content/gdrive/MyDrive/classify-leaves/'\n",
        "\n",
        "train_val_dataset=TrainValidData(train_val_path,img_path)\n",
        "test_dataset=TestData(test_path,img_path,transform=val_test_transform)\n",
        "print(train_val_dataset.data_info)\n",
        "print(test_dataset.data_info)"
      ],
      "id": "ed43f174",
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                      0                        1\n",
            "0                 image                    label\n",
            "1          images/0.jpg         maclura_pomifera\n",
            "2          images/1.jpg         maclura_pomifera\n",
            "3          images/2.jpg         maclura_pomifera\n",
            "4          images/3.jpg         maclura_pomifera\n",
            "...                 ...                      ...\n",
            "18349  images/18348.jpg          aesculus_glabra\n",
            "18350  images/18349.jpg  liquidambar_styraciflua\n",
            "18351  images/18350.jpg            cedrus_libani\n",
            "18352  images/18351.jpg      prunus_pensylvanica\n",
            "18353  images/18352.jpg          quercus_montana\n",
            "\n",
            "[18354 rows x 2 columns]\n",
            "                     0\n",
            "0                image\n",
            "1     images/18353.jpg\n",
            "2     images/18354.jpg\n",
            "3     images/18355.jpg\n",
            "4     images/18356.jpg\n",
            "...                ...\n",
            "8796  images/27148.jpg\n",
            "8797  images/27149.jpg\n",
            "8798  images/27150.jpg\n",
            "8799  images/27151.jpg\n",
            "8800  images/27152.jpg\n",
            "\n",
            "[8801 rows x 1 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 基于ResNest模型"
      ],
      "metadata": {
        "id": "BPcn6Q1ODi-P"
      },
      "id": "BPcn6Q1ODi-P"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3f399099"
      },
      "source": [
        "#ResNeSt模型\n",
        "def set_parameter_requires_grad(model,feature_extracting):\n",
        "    if feature_extracting:\n",
        "        model=model\n",
        "        for param in model.parameters():\n",
        "            param.requires_grad=False\n",
        "##ResNeSt模型\n",
        "def resnest_model(num_classes,feature_extract=False):\n",
        "    model_ft=resnest50(pretrained=True)\n",
        "    set_parameter_requires_grad(model_ft,feature_extract)\n",
        "    num_ftrs=model_ft.fc.in_features\n",
        "    model_ft.fc=nn.Sequential(nn.Linear(num_ftrs,num_classes))\n",
        "    \n",
        "    return model_ft"
      ],
      "id": "3f399099",
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "20171eb9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6d42d76d-bf92-4b74-a824-66fa85e16daf"
      },
      "source": [
        "def get_device():\n",
        "    return'cuda' if torch.cuda.is_available() else 'cpu'\n",
        "device=get_device()\n",
        "print(device)"
      ],
      "id": "20171eb9",
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "cuda\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6dc64157"
      },
      "source": [
        "#Configuration options\n",
        "k_folds=5\n",
        "num_epochs=30\n",
        "learning_rate=1e-4\n",
        "weight_decay=1e-3\n",
        "train_loss_function=CutMixCrossEntropyLoss(True)\n",
        "valid_loss_function=nn.CrossEntropyLoss()\n",
        "\n",
        "#For fold results\n",
        "results={}\n",
        "\n",
        "#Set fixed random number seed\n",
        "torch.manual_seed(42)\n",
        "\n",
        "#Define the K-fold Cross Validator\n",
        "kfold=KFold(n_splits=k_folds,shuffle=True)"
      ],
      "id": "6dc64157",
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "训练"
      ],
      "metadata": {
        "id": "Kgm-F311CGlz"
      },
      "id": "Kgm-F311CGlz"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "17f1ee229b234ce4bd70e626ddf6a6cd",
            "359abdcc446b4e97bd0109182ffb8171",
            "185dc21aa7714548918a25ddf128d23f",
            "e8f370fa716040cfa0ad5e36556962be",
            "7b5091c3637b41b58a464a2fbc89fa06",
            "2fa3146674304b2694c5e23e76d92126",
            "8c7951da25de47c892be3d426fb872a4",
            "a7410267467a484f9679523917070a7a",
            "41548ce4159047f6b004c19dee91d529",
            "23dd94ba022a442ba6ee986bbf8e87bd",
            "8e5e277b821e4fdf89c77987da5e8fbd"
          ]
        },
        "id": "ri2hA8TXc0GK",
        "outputId": "4dd1b475-c10f-4028-b657-ed614456f84e"
      },
      "source": [
        "\n",
        "# Start print\n",
        "print('--------------------------------------')\n",
        "\n",
        "# K-fold Cross Validation model evaluation\n",
        "for fold, (train_ids,valid_ids) in enumerate(kfold.split(train_val_dataset)):\n",
        "\n",
        "  # Print\n",
        "  print(f'FOLD {fold}')\n",
        "  print('--------------------------------------')\n",
        "\n",
        "  # Sample elements randomly from a given list of ids, no replacement.\n",
        "  train_subsampler = torch.utils.data.SubsetRandomSampler(train_ids)\n",
        "  valid_subsampler = torch.utils.data.SubsetRandomSampler(valid_ids)\n",
        "\n",
        "  # Define data loaders for training and testing data in this fold\n",
        "  trainloader = torch.utils.data.DataLoader(\n",
        "                      CutMix(TrainValidData(train_val_path, img_path, transform = train_transform), num_class=176, beta=1.0, prob=0.5, num_mix=2), \n",
        "                      batch_size=32, sampler=train_subsampler, num_workers=0)\n",
        "  validloader = torch.utils.data.DataLoader(\n",
        "                      TrainValidData(train_val_path, img_path, transform = val_test_transform),\n",
        "                      batch_size=32, sampler=valid_subsampler, num_workers=0)\n",
        "  \n",
        "  # Initialize a model and put it on the device specified.\n",
        "  #优化器：使用AdamW（对于含有L2正则项的优化，如weight decay），学习率采用cosine学习率CosineAnnealingLR;\n",
        "  model = resnest_model(176)\n",
        "  model = model.to(device)\n",
        "  model.device = device\n",
        "  \n",
        "  # Initialize optimizer\n",
        "  \n",
        "  optimizer = torch.optim.AdamW(model.parameters(),lr=learning_rate,weight_decay= weight_decay)\n",
        "  scheduler = CosineAnnealingLR(optimizer,T_max=10)\n",
        "\n",
        "  # Run the training loop for defined number of epochs\n",
        "  for epoch in range(0,num_epochs):\n",
        "    model.train()\n",
        "    # Print epoch\n",
        "    print(f'Starting epoch {epoch+1}')\n",
        "    # These are used to record information in training\n",
        "    train_losses = []\n",
        "    train_accs = []\n",
        "    # Iterate the training set by batches\n",
        "    for batch in tqdm(trainloader):\n",
        "      # Move images and labels to GPU\n",
        "      imgs, labels = batch\n",
        "      imgs = imgs.to(device)\n",
        "      labels = labels.to(device)\n",
        "      # Forward the data\n",
        "      logits = model(imgs)\n",
        "      # Calculate loss\n",
        "      loss = train_loss_function(logits,labels)\n",
        "      # Clear gradients in previous step\n",
        "      optimizer.zero_grad()\n",
        "      # Compute gradients for parameters\n",
        "      loss.backward()\n",
        "      # Update the parameters with computed gradients\n",
        "      optimizer.step()\n",
        "      # Compute the accuracy for current batch.\n",
        "      # acc = (logits.argmax(dim=-1) == labels).float().mean()\n",
        "      # Record the loss and accuracy.\n",
        "      train_losses.append(loss.item())\n",
        "      # train_accs.append(acc)\n",
        "    print(\"第%d个epoch的学习率：%f\" % (epoch+1,optimizer.param_groups[0]['lr']))\n",
        "    scheduler.step()\n",
        "    # The average loss and accuracy of the training set is the average of the recorded values.\n",
        "    train_loss = np.sum(train_losses) / len(train_losses)\n",
        "    # train_acc = np.sum(train_accs) / len(train_accs)\n",
        "    # Print the information.\n",
        "    # print(f\"[ Train | {epoch + 1:03d}/{num_epochs:03d} ] loss = {train_loss:.5f}, acc = {train_acc:.5f}\")\n",
        "    print(f\"[ Train | {epoch + 1:03d}/{num_epochs:03d} ] loss = {train_loss:.5f}\")\n",
        "\n",
        "  # Train process (all epochs) is complete\n",
        "  print('Training process has finished. Saving trained model.')\n",
        "  print('Starting validation')\n",
        "\n",
        "  # Saving the model\n",
        "  print('saving model with loss {:.3f}'.format(train_loss))\n",
        "  save_path = f'./model-fold-{fold}.pth'\n",
        "  torch.save(model.state_dict(),save_path)\n",
        "  # Start Validation\n",
        "  model.eval()\n",
        "  valid_losses = []\n",
        "  valid_accs = []\n",
        "  with torch.no_grad():\n",
        "    for batch in tqdm(validloader):\n",
        "      imgs, labels = batch\n",
        "      # No gradient in validation\n",
        "      logits = model(imgs.to(device))\n",
        "      loss = valid_loss_function(logits,labels.to(device))\n",
        "      acc = (logits.argmax(dim=-1) == labels.to(device)).float().mean()\n",
        "      # Record loss and accuracy\n",
        "      valid_losses.append(loss.item())        \n",
        "      valid_accs.append(acc)\n",
        "    # The average loss and accuracy\n",
        "    valid_loss = np.sum(valid_losses)/len(valid_losses)\n",
        "    valid_acc = np.sum(valid_accs)/len(valid_accs)\n",
        "    print(f\"[ Valid | {epoch + 1:03d}/{num_epochs:03d} ] loss = {valid_loss:.5f}, acc = {valid_acc:.5f}\")\n",
        "    print('Accuracy for fold %d: %d' % (fold, valid_acc))\n",
        "    print('--------------------------------------')\n",
        "    results[fold] = valid_acc\n",
        "# Print fold results\n",
        "print(f'K-FOLD CROSS VALIDATION RESULTS FOR {k_folds} FOLDS')\n",
        "print('--------------------------------')\n",
        "total_summation = 0.0\n",
        "for key, value in results.items():\n",
        "  print(f'Fold {key}: {value} ')\n",
        "  total_summation += value\n",
        "print(f'Average: {total_summation/len(results.items())} ')"
      ],
      "id": "ri2hA8TXc0GK",
      "execution_count": 18,
      "outputs": [
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "--------------------------------------\n",
            "FOLD 0\n",
            "--------------------------------------\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "Downloading: \"https://github.com/zhanghang1989/ResNeSt/releases/download/weights_step1/resnest50-528c19ca.pth\" to /root/.cache/torch/hub/checkpoints/resnest50-528c19ca.pth\n"
          ]
        },
        {
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "17f1ee229b234ce4bd70e626ddf6a6cd",
              "version_major": 2,
              "version_minor": 0
            },
            "text/plain": [
              "  0%|          | 0.00/105M [00:00<?, ?B/s]"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Starting epoch 1\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [2:23:48<00:00, 18.80s/it]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第1个epoch的学习率：0.000100\n",
            "[ Train | 001/030 ] loss = 3.28828\n",
            "Starting epoch 2\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [12:09<00:00,  1.59s/it]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第2个epoch的学习率：0.000098\n",
            "[ Train | 002/030 ] loss = 2.15310\n",
            "Starting epoch 3\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [08:12<00:00,  1.07s/it]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第3个epoch的学习率：0.000090\n",
            "[ Train | 003/030 ] loss = 1.85364\n",
            "Starting epoch 4\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [06:14<00:00,  1.22it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第4个epoch的学习率：0.000079\n",
            "[ Train | 004/030 ] loss = 1.68342\n",
            "Starting epoch 5\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [05:24<00:00,  1.42it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第5个epoch的学习率：0.000065\n",
            "[ Train | 005/030 ] loss = 1.55017\n",
            "Starting epoch 6\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:59<00:00,  1.53it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第6个epoch的学习率：0.000050\n",
            "[ Train | 006/030 ] loss = 1.45781\n",
            "Starting epoch 7\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:48<00:00,  1.59it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第7个epoch的学习率：0.000035\n",
            "[ Train | 007/030 ] loss = 1.37627\n",
            "Starting epoch 8\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第8个epoch的学习率：0.000021\n",
            "[ Train | 008/030 ] loss = 1.30798\n",
            "Starting epoch 9\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第9个epoch的学习率：0.000010\n",
            "[ Train | 009/030 ] loss = 1.26776\n",
            "Starting epoch 10\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第10个epoch的学习率：0.000002\n",
            "[ Train | 010/030 ] loss = 1.27605\n",
            "Starting epoch 11\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第11个epoch的学习率：0.000000\n",
            "[ Train | 011/030 ] loss = 1.24091\n",
            "Starting epoch 12\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第12个epoch的学习率：0.000002\n",
            "[ Train | 012/030 ] loss = 1.26660\n",
            "Starting epoch 13\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第13个epoch的学习率：0.000010\n",
            "[ Train | 013/030 ] loss = 1.26452\n",
            "Starting epoch 14\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第14个epoch的学习率：0.000021\n",
            "[ Train | 014/030 ] loss = 1.26170\n",
            "Starting epoch 15\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第15个epoch的学习率：0.000035\n",
            "[ Train | 015/030 ] loss = 1.28498\n",
            "Starting epoch 16\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第16个epoch的学习率：0.000050\n",
            "[ Train | 016/030 ] loss = 1.28313\n",
            "Starting epoch 17\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第17个epoch的学习率：0.000065\n",
            "[ Train | 017/030 ] loss = 1.30573\n",
            "Starting epoch 18\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第18个epoch的学习率：0.000079\n",
            "[ Train | 018/030 ] loss = 1.29347\n",
            "Starting epoch 19\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第19个epoch的学习率：0.000090\n",
            "[ Train | 019/030 ] loss = 1.30494\n",
            "Starting epoch 20\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第20个epoch的学习率：0.000098\n",
            "[ Train | 020/030 ] loss = 1.29156\n",
            "Starting epoch 21\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第21个epoch的学习率：0.000100\n",
            "[ Train | 021/030 ] loss = 1.26842\n",
            "Starting epoch 22\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第22个epoch的学习率：0.000098\n",
            "[ Train | 022/030 ] loss = 1.23066\n",
            "Starting epoch 23\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第23个epoch的学习率：0.000090\n",
            "[ Train | 023/030 ] loss = 1.20100\n",
            "Starting epoch 24\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第24个epoch的学习率：0.000079\n",
            "[ Train | 024/030 ] loss = 1.14618\n",
            "Starting epoch 25\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第25个epoch的学习率：0.000065\n",
            "[ Train | 025/030 ] loss = 1.10239\n",
            "Starting epoch 26\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第26个epoch的学习率：0.000050\n",
            "[ Train | 026/030 ] loss = 1.06380\n",
            "Starting epoch 27\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第27个epoch的学习率：0.000035\n",
            "[ Train | 027/030 ] loss = 1.04413\n",
            "Starting epoch 28\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第28个epoch的学习率：0.000021\n",
            "[ Train | 028/030 ] loss = 0.99439\n",
            "Starting epoch 29\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第29个epoch的学习率：0.000010\n",
            "[ Train | 029/030 ] loss = 0.97915\n",
            "Starting epoch 30\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第30个epoch的学习率：0.000002\n",
            "[ Train | 030/030 ] loss = 0.96877\n",
            "Training process has finished. Saving trained model.\n",
            "Starting validation\n",
            "saving model with loss 0.969\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 115/115 [00:26<00:00,  4.37it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[ Valid | 030/030 ] loss = 0.03287, acc = 0.98723\n",
            "Accuracy for fold 0: 0\n",
            "--------------------------------------\n",
            "FOLD 1\n",
            "--------------------------------------\n",
            "Starting epoch 1\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第1个epoch的学习率：0.000100\n",
            "[ Train | 001/030 ] loss = 3.30395\n",
            "Starting epoch 2\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第2个epoch的学习率：0.000098\n",
            "[ Train | 002/030 ] loss = 2.11929\n",
            "Starting epoch 3\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第3个epoch的学习率：0.000090\n",
            "[ Train | 003/030 ] loss = 1.83427\n",
            "Starting epoch 4\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第4个epoch的学习率：0.000079\n",
            "[ Train | 004/030 ] loss = 1.63861\n",
            "Starting epoch 5\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第5个epoch的学习率：0.000065\n",
            "[ Train | 005/030 ] loss = 1.53745\n",
            "Starting epoch 6\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第6个epoch的学习率：0.000050\n",
            "[ Train | 006/030 ] loss = 1.44102\n",
            "Starting epoch 7\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第7个epoch的学习率：0.000035\n",
            "[ Train | 007/030 ] loss = 1.36350\n",
            "Starting epoch 8\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第8个epoch的学习率：0.000021\n",
            "[ Train | 008/030 ] loss = 1.30970\n",
            "Starting epoch 9\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第9个epoch的学习率：0.000010\n",
            "[ Train | 009/030 ] loss = 1.26947\n",
            "Starting epoch 10\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第10个epoch的学习率：0.000002\n",
            "[ Train | 010/030 ] loss = 1.23599\n",
            "Starting epoch 11\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第11个epoch的学习率：0.000000\n",
            "[ Train | 011/030 ] loss = 1.24910\n",
            "Starting epoch 12\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第12个epoch的学习率：0.000002\n",
            "[ Train | 012/030 ] loss = 1.22829\n",
            "Starting epoch 13\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第13个epoch的学习率：0.000010\n",
            "[ Train | 013/030 ] loss = 1.24365\n",
            "Starting epoch 14\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第14个epoch的学习率：0.000021\n",
            "[ Train | 014/030 ] loss = 1.24616\n",
            "Starting epoch 15\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第15个epoch的学习率：0.000035\n",
            "[ Train | 015/030 ] loss = 1.25818\n",
            "Starting epoch 16\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第16个epoch的学习率：0.000050\n",
            "[ Train | 016/030 ] loss = 1.25265\n",
            "Starting epoch 17\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第17个epoch的学习率：0.000065\n",
            "[ Train | 017/030 ] loss = 1.29760\n",
            "Starting epoch 18\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第18个epoch的学习率：0.000079\n",
            "[ Train | 018/030 ] loss = 1.31508\n",
            "Starting epoch 19\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第19个epoch的学习率：0.000090\n",
            "[ Train | 019/030 ] loss = 1.27747\n",
            "Starting epoch 20\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第20个epoch的学习率：0.000098\n",
            "[ Train | 020/030 ] loss = 1.27380\n",
            "Starting epoch 21\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第21个epoch的学习率：0.000100\n",
            "[ Train | 021/030 ] loss = 1.25249\n",
            "Starting epoch 22\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第22个epoch的学习率：0.000098\n",
            "[ Train | 022/030 ] loss = 1.21955\n",
            "Starting epoch 23\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第23个epoch的学习率：0.000090\n",
            "[ Train | 023/030 ] loss = 1.19255\n",
            "Starting epoch 24\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第24个epoch的学习率：0.000079\n",
            "[ Train | 024/030 ] loss = 1.13527\n",
            "Starting epoch 25\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第25个epoch的学习率：0.000065\n",
            "[ Train | 025/030 ] loss = 1.10027\n",
            "Starting epoch 26\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第26个epoch的学习率：0.000050\n",
            "[ Train | 026/030 ] loss = 1.07000\n",
            "Starting epoch 27\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第27个epoch的学习率：0.000035\n",
            "[ Train | 027/030 ] loss = 1.01544\n",
            "Starting epoch 28\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第28个epoch的学习率：0.000021\n",
            "[ Train | 028/030 ] loss = 0.98271\n",
            "Starting epoch 29\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第29个epoch的学习率：0.000010\n",
            "[ Train | 029/030 ] loss = 0.97860\n",
            "Starting epoch 30\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第30个epoch的学习率：0.000002\n",
            "[ Train | 030/030 ] loss = 0.96193\n",
            "Training process has finished. Saving trained model.\n",
            "Starting validation\n",
            "saving model with loss 0.962\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 115/115 [00:26<00:00,  4.34it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[ Valid | 030/030 ] loss = 0.03945, acc = 0.98397\n",
            "Accuracy for fold 1: 0\n",
            "--------------------------------------\n",
            "FOLD 2\n",
            "--------------------------------------\n",
            "Starting epoch 1\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第1个epoch的学习率：0.000100\n",
            "[ Train | 001/030 ] loss = 3.31100\n",
            "Starting epoch 2\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第2个epoch的学习率：0.000098\n",
            "[ Train | 002/030 ] loss = 2.13637\n",
            "Starting epoch 3\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第3个epoch的学习率：0.000090\n",
            "[ Train | 003/030 ] loss = 1.83737\n",
            "Starting epoch 4\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:42<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第4个epoch的学习率：0.000079\n",
            "[ Train | 004/030 ] loss = 1.65329\n",
            "Starting epoch 5\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第5个epoch的学习率：0.000065\n",
            "[ Train | 005/030 ] loss = 1.53060\n",
            "Starting epoch 6\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第6个epoch的学习率：0.000050\n",
            "[ Train | 006/030 ] loss = 1.45034\n",
            "Starting epoch 7\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第7个epoch的学习率：0.000035\n",
            "[ Train | 007/030 ] loss = 1.35540\n",
            "Starting epoch 8\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第8个epoch的学习率：0.000021\n",
            "[ Train | 008/030 ] loss = 1.30572\n",
            "Starting epoch 9\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第9个epoch的学习率：0.000010\n",
            "[ Train | 009/030 ] loss = 1.27952\n",
            "Starting epoch 10\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第10个epoch的学习率：0.000002\n",
            "[ Train | 010/030 ] loss = 1.25999\n",
            "Starting epoch 11\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第11个epoch的学习率：0.000000\n",
            "[ Train | 011/030 ] loss = 1.24932\n",
            "Starting epoch 12\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第12个epoch的学习率：0.000002\n",
            "[ Train | 012/030 ] loss = 1.25011\n",
            "Starting epoch 13\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第13个epoch的学习率：0.000010\n",
            "[ Train | 013/030 ] loss = 1.23794\n",
            "Starting epoch 14\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第14个epoch的学习率：0.000021\n",
            "[ Train | 014/030 ] loss = 1.24972\n",
            "Starting epoch 15\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第15个epoch的学习率：0.000035\n",
            "[ Train | 015/030 ] loss = 1.26862\n",
            "Starting epoch 16\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第16个epoch的学习率：0.000050\n",
            "[ Train | 016/030 ] loss = 1.29433\n",
            "Starting epoch 17\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第17个epoch的学习率：0.000065\n",
            "[ Train | 017/030 ] loss = 1.27711\n",
            "Starting epoch 18\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第18个epoch的学习率：0.000079\n",
            "[ Train | 018/030 ] loss = 1.30050\n",
            "Starting epoch 19\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第19个epoch的学习率：0.000090\n",
            "[ Train | 019/030 ] loss = 1.31181\n",
            "Starting epoch 20\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第20个epoch的学习率：0.000098\n",
            "[ Train | 020/030 ] loss = 1.26712\n",
            "Starting epoch 21\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第21个epoch的学习率：0.000100\n",
            "[ Train | 021/030 ] loss = 1.24948\n",
            "Starting epoch 22\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第22个epoch的学习率：0.000098\n",
            "[ Train | 022/030 ] loss = 1.20607\n",
            "Starting epoch 23\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第23个epoch的学习率：0.000090\n",
            "[ Train | 023/030 ] loss = 1.19127\n",
            "Starting epoch 24\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第24个epoch的学习率：0.000079\n",
            "[ Train | 024/030 ] loss = 1.15204\n",
            "Starting epoch 25\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第25个epoch的学习率：0.000065\n",
            "[ Train | 025/030 ] loss = 1.12591\n",
            "Starting epoch 26\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第26个epoch的学习率：0.000050\n",
            "[ Train | 026/030 ] loss = 1.07521\n",
            "Starting epoch 27\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第27个epoch的学习率：0.000035\n",
            "[ Train | 027/030 ] loss = 1.00714\n",
            "Starting epoch 28\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第28个epoch的学习率：0.000021\n",
            "[ Train | 028/030 ] loss = 0.99329\n",
            "Starting epoch 29\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第29个epoch的学习率：0.000010\n",
            "[ Train | 029/030 ] loss = 0.96994\n",
            "Starting epoch 30\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第30个epoch的学习率：0.000002\n",
            "[ Train | 030/030 ] loss = 0.96990\n",
            "Training process has finished. Saving trained model.\n",
            "Starting validation\n",
            "saving model with loss 0.970\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 115/115 [00:26<00:00,  4.35it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[ Valid | 030/030 ] loss = 0.02875, acc = 0.98821\n",
            "Accuracy for fold 2: 0\n",
            "--------------------------------------\n",
            "FOLD 3\n",
            "--------------------------------------\n",
            "Starting epoch 1\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第1个epoch的学习率：0.000100\n",
            "[ Train | 001/030 ] loss = 3.29834\n",
            "Starting epoch 2\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第2个epoch的学习率：0.000098\n",
            "[ Train | 002/030 ] loss = 2.15515\n",
            "Starting epoch 3\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第3个epoch的学习率：0.000090\n",
            "[ Train | 003/030 ] loss = 1.83546\n",
            "Starting epoch 4\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第4个epoch的学习率：0.000079\n",
            "[ Train | 004/030 ] loss = 1.65838\n",
            "Starting epoch 5\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第5个epoch的学习率：0.000065\n",
            "[ Train | 005/030 ] loss = 1.53510\n",
            "Starting epoch 6\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第6个epoch的学习率：0.000050\n",
            "[ Train | 006/030 ] loss = 1.44670\n",
            "Starting epoch 7\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第7个epoch的学习率：0.000035\n",
            "[ Train | 007/030 ] loss = 1.37974\n",
            "Starting epoch 8\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第8个epoch的学习率：0.000021\n",
            "[ Train | 008/030 ] loss = 1.31125\n",
            "Starting epoch 9\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第9个epoch的学习率：0.000010\n",
            "[ Train | 009/030 ] loss = 1.28462\n",
            "Starting epoch 10\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "metadata": {
            "tags": null
          },
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "第10个epoch的学习率：0.000002\n",
            "[ Train | 010/030 ] loss = 1.24825\n",
            "Starting epoch 11\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第11个epoch的学习率：0.000000\n",
            "[ Train | 011/030 ] loss = 1.24371\n",
            "Starting epoch 12\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第12个epoch的学习率：0.000002\n",
            "[ Train | 012/030 ] loss = 1.24453\n",
            "Starting epoch 13\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第13个epoch的学习率：0.000010\n",
            "[ Train | 013/030 ] loss = 1.24489\n",
            "Starting epoch 14\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第14个epoch的学习率：0.000021\n",
            "[ Train | 014/030 ] loss = 1.24724\n",
            "Starting epoch 15\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第15个epoch的学习率：0.000035\n",
            "[ Train | 015/030 ] loss = 1.24823\n",
            "Starting epoch 16\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第16个epoch的学习率：0.000050\n",
            "[ Train | 016/030 ] loss = 1.28915\n",
            "Starting epoch 17\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第17个epoch的学习率：0.000065\n",
            "[ Train | 017/030 ] loss = 1.29487\n",
            "Starting epoch 18\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第18个epoch的学习率：0.000079\n",
            "[ Train | 018/030 ] loss = 1.30385\n",
            "Starting epoch 19\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第19个epoch的学习率：0.000090\n",
            "[ Train | 019/030 ] loss = 1.30453\n",
            "Starting epoch 20\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第20个epoch的学习率：0.000098\n",
            "[ Train | 020/030 ] loss = 1.26829\n",
            "Starting epoch 21\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第21个epoch的学习率：0.000100\n",
            "[ Train | 021/030 ] loss = 1.26611\n",
            "Starting epoch 22\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第22个epoch的学习率：0.000098\n",
            "[ Train | 022/030 ] loss = 1.24630\n",
            "Starting epoch 23\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第23个epoch的学习率：0.000090\n",
            "[ Train | 023/030 ] loss = 1.19461\n",
            "Starting epoch 24\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第24个epoch的学习率：0.000079\n",
            "[ Train | 024/030 ] loss = 1.13872\n",
            "Starting epoch 25\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第25个epoch的学习率：0.000065\n",
            "[ Train | 025/030 ] loss = 1.10591\n",
            "Starting epoch 26\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第26个epoch的学习率：0.000050\n",
            "[ Train | 026/030 ] loss = 1.07090\n",
            "Starting epoch 27\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第27个epoch的学习率：0.000035\n",
            "[ Train | 027/030 ] loss = 1.01267\n",
            "Starting epoch 28\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第28个epoch的学习率：0.000021\n",
            "[ Train | 028/030 ] loss = 0.99923\n",
            "Starting epoch 29\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第29个epoch的学习率：0.000010\n",
            "[ Train | 029/030 ] loss = 0.97289\n",
            "Starting epoch 30\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第30个epoch的学习率：0.000002\n",
            "[ Train | 030/030 ] loss = 0.95504\n",
            "Training process has finished. Saving trained model.\n",
            "Starting validation\n",
            "saving model with loss 0.955\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 115/115 [00:26<00:00,  4.34it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ Valid | 030/030 ] loss = 0.02950, acc = 0.98832\n",
            "Accuracy for fold 3: 0\n",
            "--------------------------------------\n",
            "FOLD 4\n",
            "--------------------------------------\n",
            "Starting epoch 1\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第1个epoch的学习率：0.000100\n",
            "[ Train | 001/030 ] loss = 3.33406\n",
            "Starting epoch 2\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第2个epoch的学习率：0.000098\n",
            "[ Train | 002/030 ] loss = 2.19064\n",
            "Starting epoch 3\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第3个epoch的学习率：0.000090\n",
            "[ Train | 003/030 ] loss = 1.86535\n",
            "Starting epoch 4\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第4个epoch的学习率：0.000079\n",
            "[ Train | 004/030 ] loss = 1.67288\n",
            "Starting epoch 5\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:45<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第5个epoch的学习率：0.000065\n",
            "[ Train | 005/030 ] loss = 1.55057\n",
            "Starting epoch 6\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第6个epoch的学习率：0.000050\n",
            "[ Train | 006/030 ] loss = 1.42688\n",
            "Starting epoch 7\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第7个epoch的学习率：0.000035\n",
            "[ Train | 007/030 ] loss = 1.38180\n",
            "Starting epoch 8\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第8个epoch的学习率：0.000021\n",
            "[ Train | 008/030 ] loss = 1.31734\n",
            "Starting epoch 9\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第9个epoch的学习率：0.000010\n",
            "[ Train | 009/030 ] loss = 1.29460\n",
            "Starting epoch 10\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第10个epoch的学习率：0.000002\n",
            "[ Train | 010/030 ] loss = 1.24629\n",
            "Starting epoch 11\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第11个epoch的学习率：0.000000\n",
            "[ Train | 011/030 ] loss = 1.26254\n",
            "Starting epoch 12\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第12个epoch的学习率：0.000002\n",
            "[ Train | 012/030 ] loss = 1.24811\n",
            "Starting epoch 13\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第13个epoch的学习率：0.000010\n",
            "[ Train | 013/030 ] loss = 1.25192\n",
            "Starting epoch 14\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第14个epoch的学习率：0.000021\n",
            "[ Train | 014/030 ] loss = 1.25577\n",
            "Starting epoch 15\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第15个epoch的学习率：0.000035\n",
            "[ Train | 015/030 ] loss = 1.24568\n",
            "Starting epoch 16\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第16个epoch的学习率：0.000050\n",
            "[ Train | 016/030 ] loss = 1.29033\n",
            "Starting epoch 17\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第17个epoch的学习率：0.000065\n",
            "[ Train | 017/030 ] loss = 1.29539\n",
            "Starting epoch 18\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第18个epoch的学习率：0.000079\n",
            "[ Train | 018/030 ] loss = 1.30997\n",
            "Starting epoch 19\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第19个epoch的学习率：0.000090\n",
            "[ Train | 019/030 ] loss = 1.29731\n",
            "Starting epoch 20\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第20个epoch的学习率：0.000098\n",
            "[ Train | 020/030 ] loss = 1.26868\n",
            "Starting epoch 21\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第21个epoch的学习率：0.000100\n",
            "[ Train | 021/030 ] loss = 1.26398\n",
            "Starting epoch 22\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第22个epoch的学习率：0.000098\n",
            "[ Train | 022/030 ] loss = 1.21951\n",
            "Starting epoch 23\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第23个epoch的学习率：0.000090\n",
            "[ Train | 023/030 ] loss = 1.17561\n",
            "Starting epoch 24\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第24个epoch的学习率：0.000079\n",
            "[ Train | 024/030 ] loss = 1.14751\n",
            "Starting epoch 25\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第25个epoch的学习率：0.000065\n",
            "[ Train | 025/030 ] loss = 1.10839\n",
            "Starting epoch 26\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第26个epoch的学习率：0.000050\n",
            "[ Train | 026/030 ] loss = 1.06638\n",
            "Starting epoch 27\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第27个epoch的学习率：0.000035\n",
            "[ Train | 027/030 ] loss = 1.02018\n",
            "Starting epoch 28\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第28个epoch的学习率：0.000021\n",
            "[ Train | 028/030 ] loss = 0.99230\n",
            "Starting epoch 29\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:43<00:00,  1.62it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第29个epoch的学习率：0.000010\n",
            "[ Train | 029/030 ] loss = 0.96499\n",
            "Starting epoch 30\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 459/459 [04:44<00:00,  1.61it/s]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "第30个epoch的学习率：0.000002\n",
            "[ Train | 030/030 ] loss = 0.96189\n",
            "Training process has finished. Saving trained model.\n",
            "Starting validation\n",
            "saving model with loss 0.962\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "100%|██████████| 115/115 [00:26<00:00,  4.36it/s]"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[ Valid | 030/030 ] loss = 0.03487, acc = 0.98723\n",
            "Accuracy for fold 4: 0\n",
            "--------------------------------------\n",
            "K-FOLD CROSS VALIDATION RESULTS FOR 5 FOLDS\n",
            "--------------------------------\n",
            "Fold 0: 0.9872282147407532 \n",
            "Fold 1: 0.9839673638343811 \n",
            "Fold 2: 0.9882088303565979 \n",
            "Fold 3: 0.9883151650428772 \n",
            "Fold 4: 0.9872282147407532 \n",
            "Average: 0.9869896173477173 \n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 预测"
      ],
      "metadata": {
        "id": "mugwIL4JDY95"
      },
      "id": "mugwIL4JDY95"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "687cf85a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 240
        },
        "outputId": "263e7ad8-44a9-4825-89aa-45b728724333"
      },
      "source": [
        "testloader=torch.utils.data.DataLoader(\n",
        "    TestData(test_path,img_path,transform=val_test_transfrom),\n",
        "    batch_size=32,num_workers=0)"
      ],
      "id": "687cf85a",
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-fac1e9c8584e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m testloader=torch.utils.data.DataLoader(\n\u001b[0m\u001b[1;32m      2\u001b[0m     \u001b[0mTestData\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_path\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mimg_path\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mval_test_transfrom\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m     batch_size=32,num_workers=0)\n",
            "\u001b[0;31mNameError\u001b[0m: name 'torch' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "wqY4zqnCF4AL"
      },
      "id": "wqY4zqnCF4AL",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "##predict\n",
        "model=resnest_model(176)\n",
        "\n",
        "#create model and load weights form checkpoint\n",
        "model=model.to(device)\n",
        "#load the all folds\n",
        "for test_fold in range(k_folds):\n",
        "  model_path=f'./model-fold-{test_fold}.pth'\n",
        "  saveFileName=f'./submission-fold-{test_fold}.csv'\n",
        "  model.load_state_dict(torch.load(model_path))\n",
        "\n",
        "  #Make sure the model is in eval mode\n",
        "  #some modules like Dropout or BatchNorm affect if the model is in traing mode.\n",
        "  model.eval()\n",
        "  tta_model=tta.ClassificationTTAWrapper(model,tta.aliases.five_crop_transform(200,200))#Test-Time Augmentation\n",
        "\n",
        "  #Initialize a list to store the predictions\n",
        "  predictions=[]\n",
        "  #Iterate the testing set by batches.\n",
        "  for batch in tqdm(testloader):\n",
        "\n",
        "    imgs=batch\n",
        "    with torch.no_grad():\n",
        "      logits=tta_model(imgs.to(device))\n",
        "\n",
        "      #Take the class with greatest logit as prediction and record it\n",
        "      predictions.extend(logits.argmax(dim=-1).cpu().numpy().tolist())\n",
        "  preds=[]\n",
        "  for i in predictions:\n",
        "    preds.append(num_to_class[i])\n",
        "  \n",
        "  test_data=pd.read_csv(test_path)\n",
        "  test_data['label']=pd.Series(preds)\n",
        "  submission=pd.concat([test_data['iamge'],test_data['label']],axis=1)\n",
        "  submission.to_csv(saveFileName,index=False)\n",
        "  print(\"ResNeSt Model Results Done!\")\n"
      ],
      "metadata": {
        "id": "7j-6JuujEKxa"
      },
      "id": "7j-6JuujEKxa",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "S2q7xeevG0-M"
      },
      "id": "S2q7xeevG0-M",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ResNeSt的5折交叉验证的结果投票"
      ],
      "metadata": {
        "id": "JiQJFD_CG5o-"
      },
      "id": "JiQJFD_CG5o-"
    },
    {
      "cell_type": "code",
      "source": [
        "#读取5折交叉验证的结果投票\n",
        "df0=pd.read_csv('./submission-fold-0.csv')\n",
        "df1=pd.read_csv('./submission-fold-1.csv')\n",
        "df2=pd.read_csv('./submission-fold-2.csv')\n",
        "df3=pd.read_csv('./submission-fold-3.csv')\n",
        "df4=pd.read_csv('./submission-fold-4.csv')"
      ],
      "metadata": {
        "id": "TFd95eOJG-rH"
      },
      "id": "TFd95eOJG-rH",
      "execution_count": null,
      "outputs": []
    }
  ]
}
